#!/usr/bin/env bash

if [ ! "$(basename "$(readlink -f -- "$0")")" = "cfg" ] ; then
    echo error: cfg must not be sourced
    return 1
fi

sscp ()
{
    # soft silent copy
    srm "$2" > /dev/null 2> /dev/null
    cp "$1" "$2"
}

MYDIR="$(realpath "$(dirname "$(readlink -f "$0")")/../..")"
DEVDIR="$(realpath "$(dirname "$(readlink -f "$0")")/..")"

echo "#!/usr/bin/env bash" > "$HOME/.setdirs"
echo "export MYDIR=\"$MYDIR\"" >> "$HOME/.setdirs"
echo "export DEVDIR=\"$DEVDIR\"" >> "$HOME/.setdirs"

mkdir -p "$DEVDIR/bin"
mkdir -p "$DEVDIR/tmp"
mkdir -p "$DEVDIR/archive"

mkdir -p "$MYDIR/tmp"
mkdir -p "$MYDIR/games"
mkdir -p "$MYDIR/vids"
mkdir -p "$MYDIR/misc_programs"
mkdir -p "$MYDIR/misc"
mkdir -p "$MYDIR/scrap"

if [ "$(uname)" = "Darwin" ] ; then
    if [ "$1" = "--install" ] ; then
        if [ "$(uname -m)" = "arm64" ] && ! (arch -arch x86_64 uname -m > /dev/null) ; then
            softwareupdate --install-rosetta --agree-to-license
        fi
        eval $(/opt/homebrew/bin/brew shellenv)
        brew bundle install --no-upgrade --file="$DEVDIR/cfgs/Brewfile"

        python3 -m venv "$DEVDIR/.venv"

        . "$DEVDIR/cfgs/bash.bash_profile"

        # pip install --requirement "%devdir%\cfgs\requirements.txt"
    fi

    defaults write com.apple.dock tilesize -int 16
    defaults write com.apple.dock size-immutable -bool true
    killall Dock
fi

mv -f "$DEVDIR/bin/srm" "$MYDIR/scrap/srm_$RANDOM" > /dev/null 2> /dev/null
cp "$DEVDIR/cfgs/srm" "$DEVDIR/bin/srm"
chmod +x "$DEVDIR/bin/srm"

sscp "$DEVDIR/cfgs/vscin" "$DEVDIR/bin/vscin"
chmod +x "$DEVDIR/bin/vscin"

sscp "$DEVDIR/cfgs/runemacs" "$DEVDIR/bin/runemacs"
chmod +x "$DEVDIR/bin/runemacs"

sscp "$DEVDIR/cfgs/venvin" "$DEVDIR/bin/venvin"

sscp "$DEVDIR/cfgs/.bash_profile" "$HOME/.bash_profile"

mkdir -p "$HOME/.config/nvim"
sscp "$DEVDIR/cfgs/init.vim" "$HOME/.config/nvim/init.vim"

mkdir -p "$HOME/.emacs.d/baks"
mkdir -p "$HOME/.emacs.d/autosaves"
cat /dev/null > "$HOME/.emacs.d/custom.el"
sscp "$DEVDIR/cfgs/init.el" "$HOME/.emacs.d/init.el"

sscp "$DEVDIR/cfgs/.gitconfig" "$HOME/.gitconfig"

